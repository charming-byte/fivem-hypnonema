name: Continuous Integration

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "**"

jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
      assemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}

    steps:
      - uses: actions/checkout@v4.1.2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.13.6
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.13.6
        with:
          useConfigFile: true
          configFilePath: ./.github/version.yml
  build:
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      ASSEMBLYSEMVER: ${{ needs.calculate-version.outputs.assemblySemVer }}

    steps:
      - uses: actions/checkout@v4.1.2

      - name: Restore dependencies
        run: dotnet restore Hypnonema.sln

      - name: Build the solution
        run: dotnet build -c Release -o Build /p:Version=${{env.ASSEMBLYSEMVER}} Hypnonema.sln

      - run: mv -f libs/Newtonsoft.Json.dll  src/Hypnonema.Client/bin/Release/net452/
      
      - name: Setup node 
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Build NUI 
        run: cd src/Hypnonema.NUI/ && npm install --legacy-peer-deps && npm run build
      
      - name: Build DUI
        run: cd src/Hypnonema.DUI && npm install --legacy-peer-deps && npm run build  
      
      - name: Prepare build artifact
        shell: bash
        run: |
          mkdir -p build/client/html && mkdir build/server && mkdir build/wwwroot
          cp src/Hypnonema.Client/bin/Release/net452/* build/client/ && rm build/client/CitizenFX.Core.Client.dll
          cp src/Hypnonema.Server/bin/Release/netstandard2.0/* build/server/ && rm build/server/CitizenFX.Core.Server.dll
          cp -r {README.md,LICENSE.md,stream} build
          cp src/{fxmanifest.lua,permissions.cfg} build
          cp src/Hypnonema.DUI/dist/index.html build/wwwroot
          cp -r src/Hypnonema.NUI/build build/client/html

      - name: Attach Zip as build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Hypnonema-${{ env.SEMVER }}
          path: build
