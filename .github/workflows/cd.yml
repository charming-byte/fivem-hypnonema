name: Release

on:
  push:
    tags:
      - "*"

jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
      assemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}

    steps:
      - uses: actions/checkout@v4.1.2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.13.6
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.13.6
        with:
          useConfigFile: true
          configFilePath: ./.github/version.yml
  
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      ZipName: hypnonema-${{ needs.calculate-version.outputs.semVer }}.zip
      ASSEMBLYSEMVER: ${{ needs.calculate-version.outputs.assemblySemVer }}

    steps:
      - uses: actions/checkout@v4.1.2

      - name: Restore dependencies
        run: dotnet restore Hypnonema.sln

      - name: Build the solution
        run: dotnet build -c Release /p:Version=${{env.ASSEMBLYSEMVER}} Hypnonema.sln

      - run: mv -f libs/Newtonsoft.Json.dll  src/Hypnonema.Client/bin/Release/net452/
      
      - name: Setup node 
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Build NUI 
        run: cd src/Hypnonema.NUI/ && npm install --legacy-peer-deps && npm run build
      
      - name: Build DUI
        run: cd src/Hypnonema.DUI && npm install --legacy-peer-deps && npm run build  
      
      - name: Prepare build artifact
        shell: bash
        run: |
          mkdir -p build/hypnonema/client/html && mkdir build/hypnonema/server && mkdir build/hypnonema/wwwroot
          cp src/Hypnonema.Client/bin/Release/net452/* build/hypnonema/client/ && rm build/hypnonema/client/CitizenFX.Core.Client.dll
          cp src/Hypnonema.Server/bin/Release/netstandard2.0/* build/hypnonema/server/ && rm build/hypnonema/server/CitizenFX.Core.Server.dll
          cp -r {README.md,LICENSE.md,stream} build/hypnonema/
          cp src/{fxmanifest.lua,permissions.cfg} build/hypnonema/
          cp src/Hypnonema.DUI/dist/index.html build/hypnonema/wwwroot
          cp -r src/Hypnonema.NUI/build/* build/hypnonema/client/html/
          cp example_map/hypnonema-map.zip build/

      - uses: vimtor/action-zip@v1
        with:
          files: build/
          dest: ${{ env.ZipName }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SEMVER }}
          release_name: ${{ env.SEMVER }}
          draft: false
          prerelease: false

      - name: Update release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.ZipName }}
          asset_name: ${{ env.ZipName }}
          asset_content_type: application/zip
